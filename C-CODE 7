#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

//练习：

//1.将三个数从大到小输出

//////我的答案：
////int main()
////{
////	printf("请输入需要比大小的三个整数：");
////	int a = 0;
////	int b = 0;
////	int c = 0;
////	scanf("%d%d%d", &a, &b, &c);
////	if (a >= b)
////	{
////		if (a >= c)
////		{
////			if (b >= c)
////				printf("这三个整数从大到小分别是：%d %d %d\n", a, b, c);
////			else if (b < c)
////				printf("这三个整数从大到小分别是：%d %d %d\n", a, c, b);
////			else
////				printf("error");
////		}
////		else if (a < c)
////		{
////			if (c >= b)
////				printf("这三个整数从大到小分别是：%d %d %d\n", c, a, b);
////			else
////				printf("error");
////		}
////		else
////			printf("error");
////	}
////	else if (a < b)
////	{
////		if (a >= c)
////		{
////			if (b >= c)
////				printf("这三个整数从大到小分别是：%d %d %d\n", b, a, c);
////			else
////				printf("error");
////		}
////		else if (a < c)
////		{
////			if (b >= c)
////				printf("这三个整数从大到小分别是：%d %d %d\n", b, c, a);
////			else if (b < c)
////				printf("这三个整数从大到小分别是：%d %d %d\n", c, b, a);
////			else
////				printf("error");
////		}
////		else
////			printf("error");
////	}
////	else
////		printf("error");
////	return 0;
////}
////（另一种更优解）
//int main()
//{
//	printf("请输入需要比大小的三个整数：");
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	scanf("%d%d%d", &a, &b, &c);
//	if (a < b)
//	{
//		int d = a;
//		a = b;
//		b = d;
//	}
//	if (a < c)
//	{
//		int d = a;
//		a = c;
//		c = d;
//	}
//	if (b < c)
//	{
//		int d = b;
//		b = c;
//		c = d;
//	}
//	printf("这三个整数从大到小分别是：%d %d %d\n", a, b, c);
//	return 0;
//}

//2.打印1~100之间所有3的倍数的数字

////我的答案：
//int main()
//{
//	int a = 0;
//	for (a = 1; a*3 <= 100; a++)
//	{
//		printf("%d\n", a*3);
//	}
//	return 0;
//}
////（另一种写法）
////int main()
////{
////	int a = 0;
////	for (a = 1; a <= 100; a++)
////	{
////		if (a % 3 == 0)
////			printf("%d\n", a);
////	}
////	return 0;
////}

//3.给定两个数，求这两个数的最大公约数

////我的答案：
//////（在编写过程中发现了最小公约数的求法）
////int main()
////{
////	int a = 0;
////	int b = 0;
////	int c = 0;
////	printf("请输入需要求最小公约数的两个整数：");
////	scanf("%d%d", &a, &b); 
////	for (c = 2; a % c != 0 || b % c != 0; c++)
////	{
////		if (c >= b || c >= a)
////		{
////			printf("%d和%d之间没有最小公约数。\n",a,b);
////			exit(1);
////		}
////	}
////	printf("%d和%d的最小公约数为%d", a, b, c);
////	return 0;
////}
////（咳咳，回归正题，最大公约数的求法）
////int main()
////{
////	int a = 0;
////	int b = 0;
////	int c = 0;
////	int d = 0;
////	int e = 0;
////	printf("请输入需要求最大公约数的两个整数：");
////	scanf("%d%d", &a, &b); 
////	if (a >= b)
////		c = a;
////	else if (a < b)
////		c = b;
////	else
////	{
////		printf("error");
////		exit(1);
////	}
////	for (d = c; d>=2; d--)
////	{
////		if (a % d == 0 && b % d == 0)
////		{
////			printf("%d和%d的最大公约数为%d", a, b, d);
////			exit(0);
////		}
////	}
////	printf("%d和%d之间没有最大公约数。\n", a, b);
////	exit(2);
////	return 0;
////}
////（另一种更优解（辗转相除法））
//int main()
//{
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	printf("请输入需要求最大公约数的两个整数：");
//	scanf("%d%d", &a, &b); 
//	while (c=a % b)
//	{
//		//c = a % b;
//		a = b;
//		b = c;
//	}
//	printf("最大公约数为%d",b);
//	return 0;
//}

//4.打印1000年~2000年之间的闰年
//闰年定义：1.能被四整除，不能被100整除，2.能被400整除


////我的答案：
//int main()
//{
//	int year = 0;
//	int count = 0;
//	for (year = 1000; year <= 2000; year++)
//	{
//		if ((year % 4 == 0 && year % 100 != 0)||(year % 400 == 0))
//		{
//			printf("%d\n", year);
//			count++;
//		}
//	}
//	printf("在1000年到2000年之间一共有%d个闰年。",count);
//	return 0;
//}

//5.打印100~200之间的素数

//////我的答案：（试除法）
////int main()
////{
////	int i = 0;
////	int m = 0;
////	for (i = 100; i <= 200; i++)
////	{
////		int n = 0;
////		for (n = 2; n < i; n++)
////		{
////			if (i % n == 0)
////				break;
////		}
////		if (i == n)
////		{
////			printf("%d\n", i);
////			m++;
////		}
////	}
////	printf("在100到200之间一共有%d个素数。\n",m);
////	return 0;
////}
////另一种更优解
//#include <math.h>
//int main()
//{
//	int i = 0;
//	int m = 0;
//	for (i = 101; i <= 200; i+=2)
//	{
//		int n = 0;
//		for (n = 2; n <= sqrt(i); n++)//sqrt()函数表示开平方，同时需要引用库函数<math.h>
//		{
//			if (i % n == 0)
//				break;
//		}
//		if (n > sqrt(i))
//		{
//			printf("%d\n", i);
//			m++;
//		}
//	}
//	printf("在100到200之间一共有%d个素数。\n", m);
//	return 0;
//}


//int main()
//{
//	int a = 0, b = 0;
//	for (a = 1, b = 1; a <= 100; a++)
//	{
//		if (b >= 20)
//			break;
//		if (b % 3 == 1)
//		{
//			b = b + 3;
//			continue;
//		}
//		b = b - 5;
//	}
//	printf("%d\n", a);
//	return 0;
//}

//6.数9的个数：数一下1~100之间所有的整数之间出现多少个数字9

////我的答案：
//int main()
//{
//	int i = 0;
//	int count = 0;
//	for (i = 1; i <= 100; i++)
//	{
//		if (i % 10 == 9)
//			count++;
//		if (i / 10 == 9)
//			count++;
//	}
//	printf("从1~100之间有%d个数字9。\n",count);
//	return 0;
//}

//7.分数求和：计算1/1-1/2+1/3+……+1/99-1/100的结果

////我的答案：
//int main()
//{
//	double sum = 0.00;
//	double i = 0.00;
//	int n = 0;
//	int flag = 1;
//	for (n = 1; n <= 100; n++)
//	{
//		i = 1;
//		sum += flag*(i / n);
//		flag = -flag;
//	}
//	printf("1/1-1/2+1/3+……+1/99-1/100的结果为%lf。\n",sum);
//	return 0;
//}

//8.求最大值：求十个整数中最大值

////我的答案：
//int main()
//{
//	int i = 0;
//	int arr[10];
//	printf("请输入需要求最大值的十个整数：");
//	for (i = 0; i <= 9; i++)
//	{
//		scanf("%d", &arr[i]);
//	}
//	int max = arr[0];
//	for (i = 0; i <= 10; i++)
//	{
//		if (arr[i] >= max)
//			max = arr[i];
//	}
//	printf("这十个数的最大值为：%d\n", max);
//	return 0;
//}

//9.乘法口诀表：在屏幕上输出9*9乘法口诀表

////我的答案：
//int main()
//{
//	int a = 0;
//	int b = 0;
//	for (a = 1; a <= 9; a++)
//	{
//		for (b = 1; b <= a; b++)
//		{
//			printf("%d*%d=%-2d ", a, b, a * b);//左对齐，在%后面加上数字表示空几位，正数为右对齐，负数为左对齐
//		}
//		printf("\n");
//	}
//	return 0;
//}

//10.猜数字游戏

////我的答案：
//int dat = 0;
//int n = 0;
//void menu()
//{
//	printf("****************************************\n");
//	printf("*              猜数字游戏              *\n");
//	printf("****************************************\n");
//	printf("*              1.开始游戏              *\n");
//	printf("*              2.配置游戏              *\n");
//	printf("*              0.退出游戏              *\n");
//	printf("****************************************\n");
//}
//void config()
//{
//	printf("请输入尝试参数（默认5次）：");
//	scanf("%d", &dat);
//	if (dat >= 1)
//	{
//		printf("修改成功！\n");
//		n++;
//	}
//	else
//	{
//		printf("修改失败，已重置。\n");
//		dat = 0;
//	}
//}
//#include <stdlib.h>//使用srand函数和rand函数
//#include <time.h>//使用time函数
//void game()
//{
//	int num = 0;
//	int i = 0;
//	int guess = 0;
//	num = rand()%100+1;//这里生成1~100之间的随机数，由于rand函数生成0~32767之间的整数，因此需要进行数学运算确保生成数符合要求
//	printf("游戏已开始。\n");
//	for (i = 5; i >= 1; i--)
//	{
//		for (n; n >= 1; n--)
//		{
//			if (dat != 0)
//				i = dat;
//			else
//				break;
//		}
//		printf("请输入你猜测的数字（1~100之间的整数）：");
//		scanf("%d", &guess);
//		if (guess > num)
//		{
//			printf("你所猜测的数字过大。\n");
//			if (i == 1)
//			{
//				system("cls");
//				printf("很遗憾，尝试次数已耗尽，再来一次吧。\n");
//				break;
//			}
//			else
//			printf("加油，你还有%d次机会。\n", i - 1);
//		}
//		else if (guess < num)
//		{
//			printf("你所猜测的数字过小。\n");
//			if (i == 1)
//			{
//				system("cls");
//				printf("很遗憾，尝试次数已耗尽，再来一次吧。\n");
//				break;
//			}
//			else
//			printf("加油，你还有%d次机会。\n", i - 1);
//		}
//		else if (guess = num)
//		{
//			system("cls");
//			printf("恭喜你，你猜对了！\n");
//			break;
//		}
//	}
//
//}
//int main()
//{
//	int input = 0;
//	srand((unsigned int)time(NULL));//srand为随机数rand的种子，括号内输入种子，要求无符号整型，因此使用(unsigned int)进行强制类型转换，同时调用time函数生成时间戳（现在时间与1970年1月1日0时0分0秒的秒数差）time函数括号内为空指针,srand函数一般设置一次就可以了
//	do
//	{
//		menu();
//		printf("请选择：");
//		scanf("%d", &input);
//		switch (input)
//		{
//		case 0:
//			system("cls");
//			printf("游戏已退出。\n");
//			exit(0);
//			break;
//		case 1:
//			system("cls");
//			game();//游戏主体
//			break;
//		case 2:
//			system("cls");
//			config();
//			break;
//		default:
//			system("cls");
//			printf("输入错误，请重新选择。\n");
//			break;
//		}
//	} while (input);
//	return 0;
//}

//goto语句

//#include <string.h>
//#include <stdlib.h>
//int main()
//{
//	//printf("hello!\n");
//	//goto again;//goto语句可以快速跳转
//	//printf("welcome!\n");//这里跳过了此行代码
//	//again:
//	//	printf("nice!\n");
//
//	//char input[20];
//	//system("shutdown -s -t 300");//system()处理系统命令，shutdown.exe执行关机程序
//	//printf("你的电脑将在300秒内关机\n");
//	//printf("为避免电脑关机，请在下方输入“你好”\n");
//	//again:
//	//{
//	//	printf("请输入：");
//	//	scanf("%s", &input);
//	//	if (strcmp(input, "你好") == 0)
//	//	{
//	//		system("shutdown -a");
//	//		printf("输入正确，关机已取消。\n");
//	//	}
//	//	else
//	//	{
//	//		printf("输入错误，请重新输入。\n");
//	//		goto again;
//	//	}
//	//}
//	return 0;
//}
