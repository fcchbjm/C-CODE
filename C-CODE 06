#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

//while循环

//int main()
//{
//	//char password[20] = { 0 };
//	//printf("请输入密码：");
//	//scanf("%s", password);//输入密码，并存放在password中
//	//printf("请确认（Y/N）：");
//	//int ch = 0;
//	//while ((ch = getchar()) != '\n') //此处的getchar用来接收字符，循环来确保一直接收到输入密码后的回车键
//	//{
//
//	//}
//	//int ret = 0;
//	//ret = getchar();
//	//if (ret == 'Y')
//	//	printf("确认成功\n");
//	//else if (ret == 'N')
//	//	printf("已取消\n");
//	//else
//	//	printf("输入错误\n");
//
//	//int ret = 0;
//	//while ((ret = getchar()) != EOF)
//	//{
//	//	if (ret < '0' || ret>'9')
//	//		continue;
//	//	else
//	//		putchar(ret);
//	//}
//
//	return 0;
//}

//for循环

//int main()
//{
//	//int i = 0;
//	//for (i = 1; i <= 10; i++)//表达式1进行初始化循环变量处理，表达式2进行调节判断，表达式3进行循环条件的调整，三个表达式用分号隔开
//	//{
//	//	if (i == 5)
//	//		continue;//即使continue跳过了本次循环之后的代码，但依然会执行i++这一操作，因此不会造成死循环
//	//	if (i == 9)
//	//		break;
//	//	printf("i=%d\n",i);
//	//}
//
//	//int i = 0;
//	//for (i = 0; i <= 10; i++)
//	//{
//	//	//if (i = 5)//不建议在for循环内改变循环变量，防止for循环失去控制
//	//	//	printf("haha\n");
//	//	printf("hehe\n");
//	//}
//
//	//int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	//int i = 0;
//	//for (i = 0; i < 10; i++)
//	//{
//	//	printf("%d\n",arr[i]);
//	//}
//
//	//for (;;)//判断条件被省略，即判断条件恒为真，就会一直不停执行循环
//	//{
//	//	printf("hehe\n");
//	//}
//
//	//int i = 0;
//	//int j = 0;
//	//for (; i < 10; i++)
//	//{
//	//	for (; j < 10; j++)//由于j在此处没有初始化，所以每次j++都被变量j保留了下来
//	//	{
//	//		printf("hehe\n");
//	//	}
//	//}
//
//	//int x, y;
//	//for (x = 0, y = 0; x < 2 && y<5; ++x, y++)//循环2次，在x=2后不符合循环条件，结束循环
//	//{
//	//	printf("hehe\n");
//	//}
//
//	////问题：请问要循环多少次？
//	//int i = 0;
//	//int k = 0;
//	//for (i = 0, k = 0; k = 0; i++, k++)//此处判断条件为将0赋值给k，又因为0为假，所以不执行循环，答案：0次
//	//	k++;
//
//	return 0;
//}

//do while循环

//int main()
//{
//	int i = 0;
//	i = 1;
//	do//执行操作
//	{
//		i++;
//		if (i == 5)
//			continue;//此处continue作用与while语句中相同，若i++放在continue后面，就会造成死循环
//		if (i == 9)
//			break;
//		printf("i=%d\n", i);
//	} 
//	while (i <= 10);//判断条件
//
//	return 0;
//}

//应用

//1.计算n的阶乘

////我的答案：
//int main()
//{
//	int i = 0;
//	int num = 0;
//	num = 1;
//	int n = 0;
//	printf("请输入需要计算阶乘的数字：");
//	scanf("%d", &n);
//	for (i = n; i != 0; i--)
//	{
//		num = num * i;
//	}
//	printf("%d的阶乘为：%d\n",n,num);
//	return 0;
//}

//2.计算：1！+2！+3！+……+9！+10！

////我的答案：
//int main()
//{
//	printf("题目：计算1！+2！+3！+……+9！+10!\n");
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	int d = 0;
//	for (a = 1; a <= 10; a++)
//	{
//		for (c = 1,b = a; b != 0; b--)
//		{
//			c = c * b;
//		}
//		d = d + c;
//	}
//	printf("结果是：%d\n",d);
//	return 0;
//}

//3.在一个有序数组中查找到某个具体的数字

////我的答案：
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,0 };
//	int n = 0;
//	int k = 0;
//	int i = 0;
//	printf("请输入你需要查找的数字：");
//	scanf("%d",&n);
//	for (i = 0;n!=arr[i];i++)
//	{
//		if (i >= 10)
//			break;
//	}
//	if (i < 10 && i>0)
//	{
//		k = i + 1;
//		printf("你所查找的数字%d在该数组中为第%d位", n, k);
//	}
//	else if (i >= 10)
//		printf("未找到该数字");
//	else
//		printf("error");
//	return 0;
//}

//4.在一个有序数组中查找到某个具体的数字，运用二分查找算法

////我的答案：
//int main()
//{
//	int arr[20] = { 0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20 };
//	int n = 0;
//	printf("请输入要查找的数字：");
//	scanf("%d",&n);
//	int num = sizeof(arr) / sizeof(arr[0]);//确定数组元素个数
//	int left = 0;//左下标
//	int right = num - 1;//右下标
//	while (left<=right)
//	{
//		int mid = (left + right) / 2;//确定中间元素下标
//		if (n == arr[mid])
//		{
//			printf("你所要查找的数字%d在数组中为第%d位，下标为%d\n", n, mid + 1, mid);
//			break;
//		}
//		else if (n > arr[mid])
//			left = mid+1;
//		else if (n < arr[mid])
//			right = mid-1;
//		else
//			printf("error");
//	}
//	if (left > right)
//		printf("该数组中不包含要查找的数组%d",n);
//	return 0;
//}

//5.显示效果：字符串从两端向中间显示

////我的答案：
//#include <windows.h>
//#include <stdlib.h>
//int main()
//{
//	int a = 0;
//	char arr1[] = { "nice to see you!!!!!" };
//	char arr2[] = {"####################"};
//	printf("%s\n",arr2);
//	Sleep(500);//暂停0.5秒，Sleep函数S必须大写，括号内数组为毫秒数，同时需引用<windows.h>
//	system("cls");//system为执行系统命令的函数，括号内cls为清空屏幕，同时需引用<stdlib.h>
//	int b = sizeof(arr1) / sizeof(arr2[0])-2;
//	while (a <= b)
//	{
//		arr2[a] = arr1[a];
//		arr2[b] = arr1[b];
//		printf("%s\n", arr2);
//		a++;
//		b--;
//		Sleep(500);
//		system("cls");
//	}
//	printf("%s\n", arr1);
//	return 0;
//}

//6.5.编写代码实现,模拟用户登录情景,并且只能登录三次。(只允许输入三次密码,如果密码正确,则提示登录成功, 如果三次均输入错误, 则退出程序。

////我的答案：
//#include <string.h>
//int main()
//{
//	printf("欢迎注册！\n");
//	printf("请输入用户名：");
//	char username[20] = { 0 };
//	scanf("%s", &username);
//	printf("请输入密码：");
//	char password[20] = { 0 };
//	scanf("%s", &password);
//	printf("请确认密码：");
//	char password2[20] = { 0 };
//	scanf("%s", &password2);
//	if (strcmp(password , password2) == 0)//等号不能比较两个字符串是否相等，应当使用strcmp-string compare函数，相等为0，不相等为1，使用<string.h>
//		printf("密码设置成功！\n");
//	else
//	{
//		printf("密码输入不一致，设置失败。\n");
//		exit(1);
//	}
//	printf("欢迎登录！\n");
//	printf("请输入用户名：");
//	char username2[20] = { 0 };
//	scanf("%s",&username2);
//	if (strcmp(username , username2) == 0)
//	{
//		int n = 0;
//		for (n = 3; n > 0; n--)
//		{
//			printf("请输入密码：");
//			char password3[20] = { 0 };
//			scanf("%s", &password3);
//			if (strcmp(password3 , password) == 0)
//			{
//				printf("登录成功!\n");
//				break;
//			}
//			else if (n >= 2)
//			{
//				printf("密码错误，请重新输入，您还有%d次机会\n", n-1);
//			}
//			else
//			{
//				printf("密码输入次数过多，账户已冻结。\n");
//				exit(3);
//			}
//		}
//	}
//	else
//	{
//		printf("用户名输入错误或该用户不存在。\n");
//		exit(2);
//	}
//	return 0;
//}
