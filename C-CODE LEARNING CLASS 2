// 'scanf': This function or variable may be unsafe.Consider using scanf_s instead.To disable deprecation, use _CRT_SECURE_NO_WARNINGS.See online help for details
//此消息在VS2013以前为警告，在VS2013以后为错误，无法运行
//scanf是C语言提供的，具有跨平台性/可移植性，而scanf_s不是标准C语言提供的，是VS编译器提供的，在其它编译器上无法运行
//使用“_CRT_SECURE_NO_WARNINGS”来取消此警告
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

//int main()
//{
//	//计算两个数的和
//	printf("请输入两个相加数");
//	int num1 = 0;
//	int num2 = 0;
//	scanf("%d%d",&num1,&num2);//输入数据-使用输入函数scanf，取地址符号&
//	int sum = 0;//设变量sum
//	//C语言语法规定：变量要定义在当前代码块的最前面（vs2010规定，但vs2017可以运行）
//	sum = num1 + num2;
//	printf("结果是%d\n",sum);
//	return 0;
//}

//常量

//int main()
//{
//	//3;//字面常量
//
//	//int num = 10;//新建变量“num”并赋值为10
//	//printf("num=%d\n",num);
//	//num = 20;//更改变量“num”的数值为20
//	//printf("new num=%d",num);//此时变量“num”数值可变
//
//	////const-常属性
//	//const int num = 10;//此时变量“num”为const修饰的常变量，数值无法改变
//	//printf("num=%d\n", num);
//
//	//int arr[10] = { 0 };//创建数组arr 10个[10]，其中[]中必须为常数 int每个数组为整型
//
//	//以下代码运行时会报错
//	//const int n = 10;//即使给变量n定义为常变量，但仅仅是变量n含有常属性，数值不能被更改，本质上依然是变量
//	//int arr[n] = { 0 };//[]中只能是常量
//
////	//#define-定义的标识符常量
////#define ABC 10//此处变量ABC被define所定义，因此ABC不在是变量，而是常量
////	int arr[ABC] = { 0 };
////	printf("%d\n",ABC);
//
//	//枚举常量
//	//enum Sex//定义sex（性别）中包含male（男），female（女）以及secret（保密）-这三个元素即为枚举常量 enum-枚举关键字
//	//{
//	//	MALE,
//	//	FEMALE,
//	//	SECRET
//	//};
//	//printf("%d\n",MALE);//0
//	//printf("%d\n",FEMALE);//1
//	//printf("%d\n",SECRET);//2
//
//	//enum COLOR//通过enum下面的每个元素都被依次从0开始赋值
//	//{
//	//	RED,
//	//	BLUE,
//	//	YELLOW
//	//};
//	//enum COLOR color = BLUE;
//
//	return 0;
//}

//字符串+转义字符+注释

#include<string.h>//用来使用strlen函数

//int main()
//{
//	////C语言中把用双引号引起来的一串字符称为字符串字面值，简称字符串
//	//char arr1[] = "abc";//此时将字符串“abc”看作一个数组，并用arr1存放起来
//	////观察内存，分别存放了'a''b''c'和'\0'，而'\0'表示字符串的结束标志
//	//char arr2[] = {'d','e','f'};
//	////内存中只含有'd''e''f',不含结束标志，因此打印输出不正确
//	//char arr3[] = { 'd','e','f',0 };
//	////人工添加“0”或“\0”后，内存中含有结束符，因此正常打印
//	//printf("%s\n", arr1);//%s表示字符串
//	//printf("%s\n", arr2);
//	//printf("%s\n", arr3);
//
//	//ASCII 编码
//	//为方便计算机存储二进制数据，通过对字符编码从而在计算机上确定字符，如：A的ASCII码值为65，a的ASCII码值为97
//
//	//char arr1[] = "abc";
//	//char arr2[] = {'d','e','f'};
//	//char arr3[] = { 'd','e','f',0 };//另一个写法char arr3[] = { 'd','e','f','\0' };
//	//printf("%d\n", strlen(arr1));//strlen-string length 用来计算字符串长度
//	//printf("%d\n", strlen(arr2));
//	//printf("%d\n", strlen(arr3));
//	////结果：3 35 3 (x64)  3 15 3 (x86)
//
//	////转义字符
//	////如n，t-普通字符，\n-换行符号,\t-水平制表符
//	//printf("C:\windows\test\n");//输出结果：“C:windows       est”其中\t被翻译成了水平制表符，即结果中很长的空格
//	////早期C语言中由？？+其它字符称为三字母符，如：??)表示]，此时有\?\?)即可正常显示
//	//printf("C:\windows\\test\n");//此时输出结果正常
//	//printf("%c\n",'\'');//此处在'''中插入\避免''识别成转义符而发生错误
//	//printf("%s\n","\"");
//	//printf("%d\n",strlen("C:\test\32\test.c"));//输出结果为13，原本有17个字符，\t，\32均为转义字符，算作一个字符
//	//\32表示两个8进制数字，\ddd表示1~3个8进制数字
//	//此时32作为8进制数字所代表的10进制数字(26)，作为ASCII码值，对应的字符
//	//printf("%c\n", '\32');
//	//printf("%c\n", '\132');//8进制132对应的10进制数字为90，ASCII码对应为Z，与输出结果一致
//	//同理转义符\xdd,dd表示2个16进制的数字
//	//printf("%c\n", '\x61');//16进制61应的10进制数字为97，ASCII码对应为a，与输出结果一致
//	//printf("C:\windows\x63\n");
//
//	return 0;
//}
//注释  C语言：/*xxxxxx*/缺点：不能嵌套  C++：// 可以注释一行或多行

//选择if

//int main()
//{
//	int input = 0;
//	printf("请输入数字0或1(1/0)>:");
//	scanf("%d", &input);
//	if (input == 1)
//	printf("你输入了1哦\n");
//	if (input == 0)
//		printf("你输入了0哦\n");
//	else
//		printf("不听话):\n");
//	return 0;
//}

//循环while

//int main()
//{
//	printf("开始了哦\n");
//	int a = 0;
//	while (a <= 100)
//	{
//		printf("%d\n", a);
//		a++;
//	}
//	printf("结束了哦\n");
//	return 0;
//}

//自定义函数

//int add (int a,int b,int c,int d)//定义函数add，并确定相关参数
//{
//	int num = a + b + c + d;//函数内容(可用于复杂过程或多次使用的过程)
//		return num;//返回结果
//}
//int main()
//{
//	//计算两个数的和
//	printf("请输入四个相加数");
//	int num1 = 0;
//	int num2 = 0;
//	int num3 = 0;
//	int num4 = 0;
//	int sum = 0;
//	scanf("%d%d%d%d",&num1,&num2, &num3, &num4);
//	sum = add(num1,num2,num3,num4);
//	//sum=num1+num2+num3+num4;
//	printf("结果是%d\n",sum);
//	return 0;
//}

//数组

//int main()
//{
//	//int arr[10];//定义一个存放10个数字的数组
//	//char ch[20];//定义一个存放20个字符的数组
//	//float arr2[5];//定义一个存放5个浮点数的数组
//
//	//int arr[10] = {0,1,2,3,4,5,6,7,8,9};//向该数组内存放内容，数组中的每一个数都有相应的下标，下标从0开始
//
//	//int arr[10] = { 1,2,3,4,5,6,7,8,9,0 };
//	//printf("%d\n",arr[4]);//下标即对应相应元素，这里下标为4，即为第五个元素5
//
//	/*int n = 0;
//	int b[10] = { 1,2,3,4,5,6,7,8,9,0 };
//	while (n<=9)
//	{
//		printf("%d\n",b[n]);
//		n++;
//	}
//	printf("结束\n");*/
//
//	return 0;
//}

//操作符

//int main()
//{
//	////算术操作符 + - * /（取模，即取余数）
//	//int a = 5 / 2;//除法运算，a取5除2的商
//	//printf("%d\n",a);
//	//int b = 5 % 2;//取模运算，b取5除2的余数
//	//printf("%d\n",b);
//	
//	////移（2进制）位操作符 << 左移操作符  >>右移操作符
//	//int a = 1;//整型1占4个字节=32个比特位（00000000000000000000000000000001）
//	//int b = a << 1;//向左移1位（00000000000000000000000000000010）
//	//printf("%d\n",b);
//	//int c = a << 2;//向左移2位（00000000000000000000000000000100）
//	//printf("%d\n", c);
//
//	////（2进制）位操作符 & 按位与  | 按位或  ^按位异或
//	//int a = 3;//2进制011
//	//int b = 5;//2进制101
//	////int c = a & b;//此时两个数的2进制数每一位相互比较，全为1则为1，只要有0即为0，输出结果1（001）
//	////int c = a | b;//此时两个数的2进制数每一位相互比较，全为0则为0，只要有1即为1，输出结果7（111）
//	//int c = a ^ b;//此时两个数的2进制数每一位相互比较，相同0则为0，相异则为1，输出结果6（110）
//	//printf("%d\n",c);
//
//	////赋值操作符 =  +=  -=  *=  /=  &=  |=  ^=  <<=  >>=
//	//int a = 10;
//	//a = 20;//赋值，将a赋值20  ==判断相等
//
//	//a = a + 10;//将a加10后赋值给a
//	//a+=10//与a+10作用相同，其它赋值符同理，也称为复合赋值符
//
//	////单目操作符-只有一个操作符，双目操作符-两个操作符，三目操作符-三个操作符
//	////单目：! 逻辑反操作  - 负值  + 正值  & 取地址  sizeof 操作数的类型长度（以字节为单位）  ~ 对一个数的二进制按位取反  -- 前置，后置--  ++ 前置后置++  * 间接访问操作符（解引用操作符）  （类型） 强制类型转换
//	//int a = 10;//C语言中0表示假，非0都表示真
//	//printf("%d\n",a);
//	//printf("%d\n",!a);//！逻辑反操作符把非0的a值转换为0，即把真转化为假
//	
//	//int a = 0;
//	//printf("%d\n", a);
//	//printf("%d\n", !a);//！逻辑反操作符把0的a值转换为固定值1，即把假转化为真
//
//	////sizeof计算的是变量/类型所占空间的大小，单位是字节
//	//int a = 10;
//	//printf("%d\n",sizeof (a));
//	//printf("%d\n", sizeof (int));
//	//printf("%d\n", sizeof a);//当sizeof后面是变量时，可以省略括号，但数据类型不行，如不能省略int
//	//int arr[10];//这里生成了一个包含10个整型的数组arr，每个整型占4个字节
//	//printf("%d\n",sizeof (arr));//输出结果40
//	//printf("%d\n", sizeof arr);
//
//	////计算数组元素个数，元素个数=数组大小/每个元素大小
//	//int a = 0;
//	//int b = 0;
//	//int c = 0;
//	//int arr[10];
//	//a = sizeof arr;
//	//b = sizeof (arr[0]);
//	//c = a / b;
//	//printf("元素个数为：%d\n", c);
//
//	//int a = 10;
//	//int arr[] = { 1,2,3,4,5,6 };//当创建数组但未在[]中输入元素个数时，会自动依据后面{}中包含的元素个数确定个数
//	//printf("%d\n",sizeof a);
//	//printf("%d\n",sizeof (arr));//4*6=24
//	//printf("%d\n",sizeof(arr)/sizeof(arr[0]));//42/4=6
//
//	//int a = 0;//00000000000000000000000000000000
//	//int b = ~a;//~按（2进制）位取反,即将1变成0，将0变成1  11111111111111111111111111111111
//	//printf("%d\n",b);//结果-1  打印时使用的是2进制原码，正数原码、反码、补码相同，负数在内存中存储为2进制补码，2进制中的最高位为符号位，1为负值，0为正值
//	////原码，反码与补码--原码符号位不变，其它位按位取反，为反码，补码减1为反码（反码加1为补码）
//
//	//int a = 10;
//	//int b = 10;
//	//int c = a++;//后置++，先使用a值，然后a自增
//	//int d = ++b;//前置++，a值先自增，后使用a值
//	//printf("a=%d\nc=%d\nb=%d\nd=%d\n",a,c,b,d);//输出结果：a=11，c=10，b=11,d=11
//
//	//int a = 10;
//	//int b = 10;
//	//int c = a--;//后置--，先使用a值，然后a自减
//	//int d = --b;//前置--，a值先自减，后使用a值
//	//printf("a=%d\nc=%d\nb=%d\nd=%d\n",a,c,b,d);//输出结果：a=9，c=10，b=9,d=9
//
//	//int a = (int)3.14;//3.14为双精度浮点数，前面加上括号表示将其强制转换为括号内的数据类型
//	//printf("%d\n",a);//输出结果为整型3
//
//	//关系操作符 >= 大于等于  <= 小于等于  > 大于  < 小于  != 用于测试“不相等”  ==用于测试“相等”
//
//	////逻辑操作符 && 逻辑与  || 逻辑或
//	//int a = 3;//a为非0值，判断为真
//	//int b = 5;//b为非0值，判断为真
//	//int c = a && b;//a和b都为真，结果为真，如果a和b有一个为假，结果为假
//	//printf("%d\n", c);
//
//	//int a = 3;//a为非0值，判断为真
//	//int b = 0;//b为0，判断为假
//	//int c = a || b;//a和b只要有一个为真，结果为真
//	//printf("%d\n", c);
//
//	////条件操作符(三目操作符)  exp1?exp2:exp3/如果表达式1结果为真，那么执行表达式2，并作为整个表达式结果，如果表达式1结果为假，那么执行表达式3，并作为整个表达式结果
//	//int a = 10;
//	//int b = 20;
//	//int max = 0;
//	//max = (a > b ? a : b);
//	//printf("%d\n", max);
//
//	//逗号表达式 exp1,exp2,exp3,...expn
//
//	//下标引用、函数调用和结构成员 [] () . ->
//
//	//int arr[10] = { 0 };
//	//arr[4];//[]-下标引用操作符
//
////int Add(int x, int y);
////	{
////	    int x = 0;
////	    int y = 0;
////		int z = 0;
////		z = x + y;
////		return z;
////	}
////	int a = 10;
////	int b = 20;
////	int sum = Add(a, b);//()-函数调用操作符
////	printf("%d\n",sum);
//
//	return 0;
//}

////尝试：求四个数的最大值

//int MAX(int a,int b,int c,int d)
//{
//	int x = 0;
//	int y = 0;
//	int z = 0;
//	if (a >= b)
//		x = a;
//	else
//		x = b;
//	if (c >= d)
//		y = c;
//	else
//		y = d;
//	if (x >= y)
//		z = x;
//	else
//		z = y;
//	return z;
//}
//int main()
//{
//	int num1 = 0;
//	int num2 = 0;
//	int num3 = 0;
//	int num4 = 0;
//	int num = 0;
//	printf("请输入四个需要比较最大值的数字\n");
//	scanf("%d%d%d%d",&num1,&num2,&num3,&num4);
//	num = MAX(num1,num2,num3,num4);
//	printf("最大值为%d\n",num);
//	return 0;
//}
