#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>

//分支语句与循环语句
//分支语句 if switch
//循环语句 while  for  do while

//if语句

//int main()
//{
//	//int a = 10;
//	//;//是语句-空语句
//
//	//int age = 0;
//	//printf("请输入你的年龄：");
//	//scanf("%d", &age);
//	//if (age >= 0 && age <= 18)//注意：不能直接写0<=age<18，否则输入任何数先判断0<=age，为假则为0，为真则为1，0(1)<=18恒成立，然后一定会打印“未成年”
//	//{//if语句控制多条代码时，用{}括起来
//	//	printf("你还是未成年哦\n");
//	//	printf("好好学习\n");
//	//}
//	//else if (age>=18 && age<=80)//else if 在不满足if条件下继续判断
//	//	printf("你已经成年啦\n");
//	//else if (age>=80 && age<=200)
//	//	printf("您长寿\n");
//	//else
//	//	printf("不可能，请重新输入");
//
//	//int a = 0;
//	//int b = 2;
//	//if (a == 1)//这里判断a是否等于1，此处a不等于1，不进行下面if else判断，直接跳到return 0;
//	//	if (b == 2)
//	//		printf("hehe\n");
//	//	else//悬空else，与第二个if对应
//	//		printf("haha\n");
//
//	//int num = 4;
//	//if (num = 5)//此处只有一个=，相当于给num赋值为5，若有两个等号，则为判断相等，此处将num赋值为5后直接打印hehe
//	//{
//	//	printf("hehe\n");
//	//}
//
//	////尝试：判断一个数是否为奇数
//	//int num = 0;
//	//printf("请输入需要判断是否为奇数的整数：");
//	//scanf("%d",&num);
//	//if (num % 2 == 0)
//	//	printf("这个数为偶数");
//	//else if (num % 2 == 1)
//	//	printf("这个数为奇数");
//	//else
//	//	printf("输入错误，请重新输入");
//
//	////尝试：输出1~100之间的奇数
//	//int num = 0;
//	//int i = 0;
//	//while (i <= 49)
//	//{
//	//	num = 2 * i + 1;
//	//	printf("%d\n",num);
//	//	i++;
//	//}
//	//printf("这是1~100之间的所有奇数");
//	////更简洁的写法：
//	//int a = 1;
//	//while (a <= 100)
//	//{
//	//	printf("%d\n",a);
//	//	a += 2;
//	//}
//	//printf("这是1~100之间的所有奇数");
//
//	return 0;
//}

//switch语句，常用于多分支语句

//int main()
//{
//	//int day = 0;
//	//printf("请输入星期几（整数）：");
//	//scanf("%d",&day);
//	////switch (day)
//	////{
//	////case 1://依据day中的数字决定入口
//	////	printf("星期一\n");
//	////	break;//跳出该语句，结束，否则会继续执行直到该语句结束
//	////case 2://不能是变量
//	////	printf("星期二\n");
//	////	break;
//	////case 3:
//	////	printf("星期三\n");
//	////	break;
//	////case 4:
//	////	printf("星期四\n");
//	////	break;
//	////case 5:
//	////	printf("星期五\n");
//	////	break;
//	////case 6:
//	////	printf("星期六\n");
//	////	break;
//	////case 7:
//	////	printf("星期日\n");
//	////	break;
//	////}
//	//
//	////switch (day)
//	////{
//	////case 1:
//	////case 2:
//	////case 3:
//	////case 4:
//	////case 5:
//	////	printf("工作日\n");
//	////	break;
//	////case 6:
//	////case 7:
//	////	printf("休息日\n");
//	////	break;
//	////default://除以上数字的其它输出结果
//	////	printf("输入数字有误，请重新输入\n");
//	////	break;
//	////}
//	
//	////练习
//	//int n = 1;
//	//int m = 2;
//	//switch (n)
//	//{
//	//case 1:
//	//	m++;
//	//case 2:
//	//	n++;
//	//case 3:
//	//	switch (n)
//	//	{
//	//	case 1:
//	//		n++;
//	//	case 2:
//	//		m++;
//	//		n++;
//	//		break;
//	//	}
//	//case 4:
//	//	m++;
//	//	break;
//	//default:
//	//	break;
//	//}
//	//printf("m = % d\nn = % d\n",m,n);//结果m=5，n=3，因为前面没有break，所以连续执行
//
//	return 0;
//}

//if语句

//int main()
//{
//	if (0)//if括号内为0，为假，不执行下面语句
//		printf("haha\n");
//	if (1)//if括号内为1，为真，执行下面语句
//		printf("hehe\n");
//	return 0;
//}

//while语句

//int main()
//{
//	int i = 0;
//		while (i <= 10)
//		{
//			i++;
//			if (i == 5)
//			{
//				printf(" ");
//				continue;//当执行到continue时，终止本次循环，不再执行后面的代码，而是直接回到while语句开头进行判断
//			}
//			if (i == 11)
//				break;//直接终止循环，不在执行该循环
//			printf("%d\n",i);
//		}
//	return 0;
//}

//getchar语句-可以接收键盘输入的字符 putchar-输出键盘输入的字符

//int main()
//{
//	//int  ch = getchar();
//	//putchar(ch);
//	//printf("%c\n", ch);
//
//	//int ch = 0;
//	//while ((ch = getchar()) != (EOF))//此处EOF为end of file，值为-1，如果输入EOF由于是三个字符，所以并不会停止，使用ctrl+Z
//	//{
//	//	putchar(ch);
//	//}
//
//
//	return 0;
//}
